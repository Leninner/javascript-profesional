{"version":3,"sources":["typeScript/Singleton.ts","typeScript/index.ts"],"names":[],"mappings":"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","file":"typeScript.6fb26744.js","sourceRoot":"..","sourcesContent":["class Singleton {\n    private static instance: Singleton;\n\n    private constructor() {\n        // Any\n    }\n\n    static getInstance() {\n        if (!Singleton.instance) {\n            Singleton.instance = new Singleton();\n        }\n\n        return Singleton.instance;\n    }\n}\n\nexport default Singleton;\n","function sum(a: number, b: number) {\n    return a + b;\n}\n\nconst SUM = sum(78, 45);\n\nconsole.log(SUM);\n\n// Boolean\n\nlet booleano: boolean = false;\n\n// Números\n\nlet firstNumber: number = 45;\nlet secondNumber: number = 78;\n\nlet result = firstNumber + secondNumber;\n\n// String\n\nlet saludo: string = \"Me llamo Lucas\";\n\n// Arreglos\n\nlet peopple: string[] = [];\npeopple = [\"Lenin\", \"Mathias\", \"Carlos\", \"Pepe\"];\n\nlet numbers: number[] = [];\nnumbers.push(45);\nnumbers.push(789);\n\nlet numbersAndStrings: Array<string | number> = [];\nnumbersAndStrings.push(\"Lenin\");\nnumbersAndStrings.push(789);\n\n// Enum\n\nenum Colores {\n    rojo = \"Rojo\",\n    verde = \"Verde\",\n    azul = \"Azul\",\n    amarillo = \"Amarillo\",\n}\nlet colorFavorito: Colores = Colores.verde;\nconsole.log(`Mi color favorito es: ${colorFavorito}`);\n\n// Any\n\nlet comodin: any = \"Joker\";\ncomodin = { type: \"Wildcar\" };\n\n// Object\n\nlet someObject: object = { type: \"Wildcard\" };\n\n// Funciones\n\nfunction suma(a: number, b: number) {\n    return a + b;\n}\nconst add = suma(12, 78);\nconsole.log(add);\n\nfunction createAdder(a: number): (number) => number {\n    return function (b: number) {\n        return a + b;\n    };\n}\nconst sumar = createAdder(12);\nconst addTwelve = sumar(7);\n\nfunction fullName(name: string, lastName: string = \"Mazabanda\"): string {\n    return `${name} ${lastName}`;\n}\nconst richard = fullName(\"Richard\");\n\nconsole.log(richard);\n\n// Interfaces\n\nenum Color {\n    red = \"Red\",\n    green = \"Green\",\n}\n\ninterface Rectangulo {\n    ancho: number;\n    alto: number;\n    color?: Color;\n}\n\nlet rectan: Rectangulo = {\n    ancho: 4,\n    alto: 6,\n    color: Color.green,\n};\n\nfunction area(r: Rectangulo): number {\n    return r.ancho * r.alto;\n}\n\nconst areaRect = area(rectan);\nconsole.log(areaRect);\n\nrectan.toString = function () {\n    return this.color ? `Rectangulo ${this.color}` : \"Un rectángulo\";\n};\n\nconsole.log(rectan.toString());\n\n// Implementación del patrón de diseño Singleton (Una clase siempre va a tener una sola instancia)\n\nimport Singleton from \"./Singleton\";\n\nconst a = Singleton.getInstance();\nconst b = Singleton.getInstance();\n\nconsole.log(\"La instancia A es igual a la instancia B? =>\", a === b);\n\n// IMplementación del patrón de diseño Observer (Observador y Sujeto)\n// El observador tiene que tener métodos (Update, etc...)\n\ninterface Observer {\n    update: (data: any) => void;\n}\n\ninterface Subject {\n    suscribe: (observer: Observer) => void;\n    unsusbribe: (observer: Observer) => void;\n}\n\nclass BitcoinPrice implements Subject {\n    observers: Observer[] = [];\n\n    constructor() {\n        const elemento: HTMLInputElement = document.querySelector(\"#value\");\n\n        elemento.addEventListener(\"input\", () => {\n            this.notify(elemento.value);\n        });\n    }\n\n    suscribe(observer: Observer) {\n        this.observers.push(observer);\n    }\n\n    unsusbribe(observer: Observer) {\n        const index = this.observers.findIndex((obs) => {\n            return obs === observer;\n        });\n\n        this.observers.splice(index, 1);\n    }\n\n    notify(data: any) {\n        this.observers.forEach((obs) => {\n            obs.update(data);\n        });\n    }\n}\n\nclass PriceDisplay implements Observer {\n    private elemento: HTMLElement;\n\n    constructor() {\n        this.elemento = document.querySelector(\"#price\");\n    }\n    update(data: any) {\n        this.elemento.innerText = data;\n    }\n}\n\nconst value = new BitcoinPrice();\nconst display = new PriceDisplay();\n\nvalue.suscribe(display);\n\nsetTimeout(() => value.unsusbribe(display), 5000);\n"]}